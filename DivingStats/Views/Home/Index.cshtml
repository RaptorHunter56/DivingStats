@model AthleteProfileModel
@{
    ViewData["Title"] = "Home Page";
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />

<div class="athlete-profile container py-5">
    <div class="row">
        <div class="col-12 col-sm-12 col-lg-6">
            <div class="athlete-profile-card card">
                <h2 class="text-center">@Model.FullName</h2>
                <p class="text-center" style="margin: 0pc; margin-bottom: -12px;">Age: @Model.Age</p>
                <h3 class="mt-4" style="display:inline;">Social Media</h3>
                <ul class="social-media-links list-inline social-link" style="display:inline; margin-left: 168px; margin-top: -37px; text-align: left;">
                    @if (!string.IsNullOrEmpty(Model.InstagramHandle))
                    {
                        <li class="list-inline-item"><a href="https://instagram.com/@Model.InstagramHandle" target="_blank"><i class="fa fa-instagram fa-2x"></i></a></li>
                    }
                    @if (!string.IsNullOrEmpty(Model.FacebookPage))
                    {
                        <li class="list-inline-item"><a href="@Model.FacebookPage" target="_blank"><i class="fa fa-facebook-square fa-2x"></i></a></li>
                    }
                    @if (!string.IsNullOrEmpty(Model.YoutubePage))
                    {
                        <li class="list-inline-item"><a href="@Model.YoutubePage" target="_blank"><i class="fa fa-youtube-play fa-2x"></i></a></li>
                    }
                    @if (!string.IsNullOrEmpty(Model.GiveaLittlePage))
                    {
                        <li class="list-inline-item"><a href="@Model.GiveaLittlePage" target="_blank"><i class="fa fa-glide fa-2x"></i></a></li>
                    }
                </ul>
            </div>
            <div class="athlete-profile-card card">
                <img class="profile-image" src="@Url.Action("GetImage", "Image", new { imageName = "20220601_102443.jpg" })" alt="My Image" style="border-radius: 10px; margin: -15px;" />
            </div>
        </div>
        <div class="col-12 col-sm-12 col-lg-6">
            <div class="athlete-profile-card card">
                <h3 class="mt-4" style="display:inline;">Performance</h3>
                <p class="text-center" style="display:flex; padding-left: 10px;">
                    Personal Best Score: @(Model.PersonalBestScore > 397.35m ? Model.PersonalBestScore : 397.35m)
                </p>

                <h3 class="mt-4">National Titles</h3>
                <ul class="list-group">
                    @foreach (var title in Model.NationalTitles)
                    {
                        <li class="list-group-item">@title</li>
                    }
                </ul>

                <h3 class="mt-4">Achievements</h3>
                <ul class="list-group">
                    @foreach (var achievement in Model.Achievements)
                    {
                        <li class="list-group-item">@achievement</li>
                    }
                </ul>

                <h3 class="mt-4">Last 3 Competition Scores</h3>
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Competition</th>
                            <th>Score</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var score in Model.LastThreeCompetitionScores)
                        {
                            <tr>
                                <td>@score.CompetitionName</td>
                                <td>@score.Score</td>
                                <td>@score.Date.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@*<div>
    <canvas id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [{
          label: '# of Votes',
          data: [12, 19, 3, 5, 2, 3],
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
</script>*@